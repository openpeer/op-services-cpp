<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|ARM">
      <Configuration>Debug</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|ARM">
      <Configuration>Release</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{6ccc9220-9334-4601-821d-5f55bc397003}</ProjectGuid>
    <Keyword>StaticLibrary</Keyword>
    <ProjectName>hfservices.Windows.Universal</ProjectName>
    <RootNamespace>hfservices_Windows_Universal</RootNamespace>
    <DefaultLanguage>en-US</DefaultLanguage>
    <MinimumVisualStudioVersion>14.0</MinimumVisualStudioVersion>
    <AppContainerApplication>true</AppContainerApplication>
    <ApplicationType>Windows Store</ApplicationType>
    <WindowsTargetPlatformVersion>10.0.10586.0</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformMinVersion>10.0.10240.0</WindowsTargetPlatformMinVersion>
    <ApplicationTypeRevision>10.0</ApplicationTypeRevision>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
    <Import Project="..\hfservices.Shared\hfservices.Shared.vcxitems" Label="Shared" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <GenerateManifest>false</GenerateManifest>
    <CustomBuildBeforeTargets>PreBuildEvent</CustomBuildBeforeTargets>
    <OutDir>$(SolutionDir)..\Build\$(PlatformTarget)\$(Configuration)\$(MSBuildProjectName)\</OutDir>
    <IntDir>$(SolutionDir)..\Build\Intermediate\$(PlatformTarget)\$(Configuration)\$(MSBuildProjectName)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <GenerateManifest>false</GenerateManifest>
    <CustomBuildBeforeTargets>PreBuildEvent</CustomBuildBeforeTargets>
    <OutDir>$(SolutionDir)..\Build\$(PlatformTarget)\$(Configuration)\$(MSBuildProjectName)\</OutDir>
    <IntDir>$(SolutionDir)..\Build\Intermediate\$(PlatformTarget)\$(Configuration)\$(MSBuildProjectName)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
    <GenerateManifest>false</GenerateManifest>
    <CustomBuildBeforeTargets>PreBuildEvent</CustomBuildBeforeTargets>
    <OutDir>$(SolutionDir)..\Build\$(PlatformTarget)\$(Configuration)\$(MSBuildProjectName)\</OutDir>
    <IntDir>$(SolutionDir)..\Build\Intermediate\$(PlatformTarget)\$(Configuration)\$(MSBuildProjectName)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
    <GenerateManifest>false</GenerateManifest>
    <CustomBuildBeforeTargets>PreBuildEvent</CustomBuildBeforeTargets>
    <OutDir>$(SolutionDir)..\Build\$(PlatformTarget)\$(Configuration)\$(MSBuildProjectName)\</OutDir>
    <IntDir>$(SolutionDir)..\Build\Intermediate\$(PlatformTarget)\$(Configuration)\$(MSBuildProjectName)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <GenerateManifest>false</GenerateManifest>
    <CustomBuildBeforeTargets>PreBuildEvent</CustomBuildBeforeTargets>
    <OutDir>$(SolutionDir)..\Build\$(PlatformTarget)\$(Configuration)\$(MSBuildProjectName)\</OutDir>
    <IntDir>$(SolutionDir)..\Build\Intermediate\$(PlatformTarget)\$(Configuration)\$(MSBuildProjectName)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <GenerateManifest>false</GenerateManifest>
    <CustomBuildBeforeTargets>PreBuildEvent</CustomBuildBeforeTargets>
    <OutDir>$(SolutionDir)..\Build\$(PlatformTarget)\$(Configuration)\$(MSBuildProjectName)\</OutDir>
    <IntDir>$(SolutionDir)..\Build\Intermediate\$(PlatformTarget)\$(Configuration)\$(MSBuildProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <CompileAsWinRT>true</CompileAsWinRT>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>$(ProjectDir)\..\..\..\..;$(ProjectDir)\..\..\..\..\..\zsLib;$(ProjectDir)\..\..\..\..\..;$(ProjectDir)\..\..\..\..\..\idnkit\idnkit\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4068;4290</DisableSpecificWarnings>
      <PreprocessorDefinitions>USE_ETW;_UNICODE;UNICODE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>
      <GenerateWindowsMetadata>false</GenerateWindowsMetadata>
    </Link>
    <CustomBuildStep>
      <Command>echo Create manifest header file...
mc.exe -um -r $(IntermediateOutputPath) -h "$(ProjectDir)..\..\..\..\openpeer\services\internal" "$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.man"
echo Create resource file...
rc.exe $(IntermediateOutputPath)services_ETWTracing.rc
echo Create manifest resource dll...
echo If compiling to managed code resource DLL use: csc.exe /out:$(IntermediateOutputPath)services_ETWTracing.dll /target:library /win32res:$(IntermediateOutputPath)services_ETWTracing.res
link -dll -noentry /MACHINE:$(PlatformTarget) -out:$(IntermediateOutputPath)services_ETWTracing.dll $(IntermediateOutputPath)services_ETWTracing.res
echo Copy files to output directory...
copy $(IntermediateOutputPath)services_ETWTracing.dll "$(OutDir)"
copy "$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.man" "$(OutDir)"
copy "$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.wprp" "$(OutDir)"
icacls "$(OutDir)services_ETWTracing.dll" /grant Users:RX
echo.
echo Steps to register manifest file with for Windows Performance Recorder...
echo.
echo. 1) Run a command prompt as administrator
echo.
echo 2) Change into the output directory, type:
echo cd "$(OutDir)"
echo.
echo 3) To register the manifest, type:
echo wevtutil.exe im services_ETWTracing.man /rf:"$(OutDir)services_ETWTracing.dll" /mf:"$(OutDir)services_ETWTracing.dll"
echo.
echo 4) To unregister the manifest, type:
echo wevtutil.exe um services_ETWTracing.man
echo.
</Command>
      <Outputs>$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.h;$(IntermediateOutputPath)services_ETWTracing.rc;$(IntermediateOutputPath)services_ETWTracing.res;$(IntermediateOutputPath)services_ETWTracing.dll;$(OutDir)services_ETWTracing.dll;$(OutDir)services_ETWTracing.man;$(OutDir)services_ETWTracing.wprp;%(Outputs)</Outputs>
      <Inputs>$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.man;$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.wprp;%(Inputs)</Inputs>
    </CustomBuildStep>
    <Lib>
      <AdditionalOptions>/IGNORE:4264,4221 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <CompileAsWinRT>true</CompileAsWinRT>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>$(ProjectDir)\..\..\..\..;$(ProjectDir)\..\..\..\..\..\zsLib;$(ProjectDir)\..\..\..\..\..;$(ProjectDir)\..\..\..\..\..\idnkit\idnkit\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4068;4290</DisableSpecificWarnings>
      <PreprocessorDefinitions>USE_ETW;_UNICODE;UNICODE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>
      <GenerateWindowsMetadata>false</GenerateWindowsMetadata>
    </Link>
    <CustomBuildStep>
      <Command>echo Create manifest header file...
mc.exe -um -r $(IntermediateOutputPath) -h "$(ProjectDir)..\..\..\..\openpeer\services\internal" "$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.man"
echo Create resource file...
rc.exe $(IntermediateOutputPath)services_ETWTracing.rc
echo Create manifest resource dll...
echo If compiling to managed code resource DLL use: csc.exe /out:$(IntermediateOutputPath)services_ETWTracing.dll /target:library /win32res:$(IntermediateOutputPath)services_ETWTracing.res
link -dll -noentry /MACHINE:$(PlatformTarget) -out:$(IntermediateOutputPath)services_ETWTracing.dll $(IntermediateOutputPath)services_ETWTracing.res
echo Copy files to output directory...
copy $(IntermediateOutputPath)services_ETWTracing.dll "$(OutDir)"
copy "$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.man" "$(OutDir)"
copy "$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.wprp" "$(OutDir)"
icacls "$(OutDir)services_ETWTracing.dll" /grant Users:RX
echo.
echo Steps to register manifest file with for Windows Performance Recorder...
echo.
echo. 1) Run a command prompt as administrator
echo.
echo 2) Change into the output directory, type:
echo cd "$(OutDir)"
echo.
echo 3) To register the manifest, type:
echo wevtutil.exe im services_ETWTracing.man /rf:"$(OutDir)services_ETWTracing.dll" /mf:"$(OutDir)services_ETWTracing.dll"
echo.
echo 4) To unregister the manifest, type:
echo wevtutil.exe um services_ETWTracing.man
echo.
</Command>
      <Outputs>$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.h;$(IntermediateOutputPath)services_ETWTracing.rc;$(IntermediateOutputPath)services_ETWTracing.res;$(IntermediateOutputPath)services_ETWTracing.dll;$(OutDir)services_ETWTracing.dll;$(OutDir)services_ETWTracing.man;$(OutDir)services_ETWTracing.wprp;%(Outputs)</Outputs>
      <Inputs>$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.man;$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.wprp;%(Inputs)</Inputs>
    </CustomBuildStep>
    <Lib>
      <AdditionalOptions>/IGNORE:4264,4221 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|arm'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <CompileAsWinRT>true</CompileAsWinRT>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>$(ProjectDir)\..\..\..\..;$(ProjectDir)\..\..\..\..\..\zsLib;$(ProjectDir)\..\..\..\..\..;$(ProjectDir)\..\..\..\..\..\idnkit\idnkit\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4068;4290</DisableSpecificWarnings>
      <PreprocessorDefinitions>USE_ETW;_ARM_WINAPI_PARTITION_DESKTOP_SDK_AVAILABLE=1;%(ClCompile.PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>
      <GenerateWindowsMetadata>false</GenerateWindowsMetadata>
    </Link>
    <CustomBuildStep>
      <Command>echo Create manifest header file...
mc.exe -um -r $(IntermediateOutputPath) -h "$(ProjectDir)..\..\..\..\openpeer\services\internal" "$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.man"
echo Create resource file...
rc.exe $(IntermediateOutputPath)services_ETWTracing.rc
echo Create manifest resource dll...
echo If compiling to managed code resource DLL use: csc.exe /out:$(IntermediateOutputPath)services_ETWTracing.dll /target:library /win32res:$(IntermediateOutputPath)services_ETWTracing.res
link -dll -noentry /MACHINE:$(PlatformTarget) -out:$(IntermediateOutputPath)services_ETWTracing.dll $(IntermediateOutputPath)services_ETWTracing.res
echo Copy files to output directory...
copy $(IntermediateOutputPath)services_ETWTracing.dll "$(OutDir)"
copy "$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.man" "$(OutDir)"
copy "$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.wprp" "$(OutDir)"
icacls "$(OutDir)services_ETWTracing.dll" /grant Users:RX
echo.
echo Steps to register manifest file with for Windows Performance Recorder...
echo.
echo. 1) Run a command prompt as administrator
echo.
echo 2) Change into the output directory, type:
echo cd "$(OutDir)"
echo.
echo 3) To register the manifest, type:
echo wevtutil.exe im services_ETWTracing.man /rf:"$(OutDir)services_ETWTracing.dll" /mf:"$(OutDir)services_ETWTracing.dll"
echo.
echo 4) To unregister the manifest, type:
echo wevtutil.exe um services_ETWTracing.man
echo.
</Command>
      <Outputs>$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.h;$(IntermediateOutputPath)services_ETWTracing.rc;$(IntermediateOutputPath)services_ETWTracing.res;$(IntermediateOutputPath)services_ETWTracing.dll;$(OutDir)services_ETWTracing.dll;$(OutDir)services_ETWTracing.man;$(OutDir)services_ETWTracing.wprp;%(Outputs)</Outputs>
      <Inputs>$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.man;$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.wprp;%(Inputs)</Inputs>
    </CustomBuildStep>
    <Lib>
      <AdditionalOptions>/IGNORE:4264,4221 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|arm'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <CompileAsWinRT>true</CompileAsWinRT>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>$(ProjectDir)\..\..\..\..;$(ProjectDir)\..\..\..\..\..\zsLib;$(ProjectDir)\..\..\..\..\..;$(ProjectDir)\..\..\..\..\..\idnkit\idnkit\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4068;4290</DisableSpecificWarnings>
      <PreprocessorDefinitions>USE_ETW;_ARM_WINAPI_PARTITION_DESKTOP_SDK_AVAILABLE=1;%(ClCompile.PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>
      <GenerateWindowsMetadata>false</GenerateWindowsMetadata>
    </Link>
    <CustomBuildStep>
      <Command>echo Create manifest header file...
mc.exe -um -r $(IntermediateOutputPath) -h "$(ProjectDir)..\..\..\..\openpeer\services\internal" "$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.man"
echo Create resource file...
rc.exe $(IntermediateOutputPath)services_ETWTracing.rc
echo Create manifest resource dll...
echo If compiling to managed code resource DLL use: csc.exe /out:$(IntermediateOutputPath)services_ETWTracing.dll /target:library /win32res:$(IntermediateOutputPath)services_ETWTracing.res
link -dll -noentry /MACHINE:$(PlatformTarget) -out:$(IntermediateOutputPath)services_ETWTracing.dll $(IntermediateOutputPath)services_ETWTracing.res
echo Copy files to output directory...
copy $(IntermediateOutputPath)services_ETWTracing.dll "$(OutDir)"
copy "$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.man" "$(OutDir)"
copy "$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.wprp" "$(OutDir)"
icacls "$(OutDir)services_ETWTracing.dll" /grant Users:RX
echo.
echo Steps to register manifest file with for Windows Performance Recorder...
echo.
echo. 1) Run a command prompt as administrator
echo.
echo 2) Change into the output directory, type:
echo cd "$(OutDir)"
echo.
echo 3) To register the manifest, type:
echo wevtutil.exe im services_ETWTracing.man /rf:"$(OutDir)services_ETWTracing.dll" /mf:"$(OutDir)services_ETWTracing.dll"
echo.
echo 4) To unregister the manifest, type:
echo wevtutil.exe um services_ETWTracing.man
echo.
</Command>
      <Outputs>$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.h;$(IntermediateOutputPath)services_ETWTracing.rc;$(IntermediateOutputPath)services_ETWTracing.res;$(IntermediateOutputPath)services_ETWTracing.dll;$(OutDir)services_ETWTracing.dll;$(OutDir)services_ETWTracing.man;$(OutDir)services_ETWTracing.wprp;%(Outputs)</Outputs>
      <Inputs>$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.man;$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.wprp;%(Inputs)</Inputs>
    </CustomBuildStep>
    <Lib>
      <AdditionalOptions>/IGNORE:4264,4221 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <CompileAsWinRT>true</CompileAsWinRT>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>$(ProjectDir)\..\..\..\..;$(ProjectDir)\..\..\..\..\..\zsLib;$(ProjectDir)\..\..\..\..\..;$(ProjectDir)\..\..\..\..\..\idnkit\idnkit\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4068;4290</DisableSpecificWarnings>
      <PreprocessorDefinitions>USE_ETW;_UNICODE;UNICODE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>
      <GenerateWindowsMetadata>false</GenerateWindowsMetadata>
    </Link>
    <CustomBuildStep>
      <Command>echo Create manifest header file...
mc.exe -um -r $(IntermediateOutputPath) -h "$(ProjectDir)..\..\..\..\openpeer\services\internal" "$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.man"
echo Create resource file...
rc.exe $(IntermediateOutputPath)services_ETWTracing.rc
echo Create manifest resource dll...
echo If compiling to managed code resource DLL use: csc.exe /out:$(IntermediateOutputPath)services_ETWTracing.dll /target:library /win32res:$(IntermediateOutputPath)services_ETWTracing.res
link -dll -noentry /MACHINE:$(PlatformTarget) -out:$(IntermediateOutputPath)services_ETWTracing.dll $(IntermediateOutputPath)services_ETWTracing.res
echo Copy files to output directory...
copy $(IntermediateOutputPath)services_ETWTracing.dll "$(OutDir)"
copy "$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.man" "$(OutDir)"
copy "$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.wprp" "$(OutDir)"
icacls "$(OutDir)services_ETWTracing.dll" /grant Users:RX
echo.
echo Steps to register manifest file with for Windows Performance Recorder...
echo.
echo. 1) Run a command prompt as administrator
echo.
echo 2) Change into the output directory, type:
echo cd "$(OutDir)"
echo.
echo 3) To register the manifest, type:
echo wevtutil.exe im services_ETWTracing.man /rf:"$(OutDir)services_ETWTracing.dll" /mf:"$(OutDir)services_ETWTracing.dll"
echo.
echo 4) To unregister the manifest, type:
echo wevtutil.exe um services_ETWTracing.man
echo.
</Command>
      <Outputs>$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.h;$(IntermediateOutputPath)services_ETWTracing.rc;$(IntermediateOutputPath)services_ETWTracing.res;$(IntermediateOutputPath)services_ETWTracing.dll;$(OutDir)services_ETWTracing.dll;$(OutDir)services_ETWTracing.man;$(OutDir)services_ETWTracing.wprp;%(Outputs)</Outputs>
      <Inputs>$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.man;$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.wprp;%(Inputs)</Inputs>
    </CustomBuildStep>
    <Lib>
      <AdditionalOptions>/IGNORE:4264,4221 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <CompileAsWinRT>true</CompileAsWinRT>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>$(ProjectDir)\..\..\..\..;$(ProjectDir)\..\..\..\..\..\zsLib;$(ProjectDir)\..\..\..\..\..;$(ProjectDir)\..\..\..\..\..\idnkit\idnkit\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4068;4290</DisableSpecificWarnings>
      <PreprocessorDefinitions>USE_ETW;_UNICODE;UNICODE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>
      <GenerateWindowsMetadata>false</GenerateWindowsMetadata>
    </Link>
    <CustomBuildStep>
      <Command>echo Create manifest header file...
mc.exe -um -r $(IntermediateOutputPath) -h "$(ProjectDir)..\..\..\..\openpeer\services\internal" "$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.man"
echo Create resource file...
rc.exe $(IntermediateOutputPath)services_ETWTracing.rc
echo Create manifest resource dll...
echo If compiling to managed code resource DLL use: csc.exe /out:$(IntermediateOutputPath)services_ETWTracing.dll /target:library /win32res:$(IntermediateOutputPath)services_ETWTracing.res
link -dll -noentry /MACHINE:$(PlatformTarget) -out:$(IntermediateOutputPath)services_ETWTracing.dll $(IntermediateOutputPath)services_ETWTracing.res
echo Copy files to output directory...
copy $(IntermediateOutputPath)services_ETWTracing.dll "$(OutDir)"
copy "$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.man" "$(OutDir)"
copy "$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.wprp" "$(OutDir)"
icacls "$(OutDir)services_ETWTracing.dll" /grant Users:RX
echo.
echo Steps to register manifest file with for Windows Performance Recorder...
echo.
echo. 1) Run a command prompt as administrator
echo.
echo 2) Change into the output directory, type:
echo cd "$(OutDir)"
echo.
echo 3) To register the manifest, type:
echo wevtutil.exe im services_ETWTracing.man /rf:"$(OutDir)services_ETWTracing.dll" /mf:"$(OutDir)services_ETWTracing.dll"
echo.
echo 4) To unregister the manifest, type:
echo wevtutil.exe um services_ETWTracing.man
echo.
</Command>
      <Outputs>$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.h;$(IntermediateOutputPath)services_ETWTracing.rc;$(IntermediateOutputPath)services_ETWTracing.res;$(IntermediateOutputPath)services_ETWTracing.dll;$(OutDir)services_ETWTracing.dll;$(OutDir)services_ETWTracing.man;$(OutDir)services_ETWTracing.wprp;%(Outputs)</Outputs>
      <Inputs>$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.man;$(ProjectDir)..\..\..\..\openpeer\services\internal\services_ETWTracing.wprp;%(Inputs)</Inputs>
    </CustomBuildStep>
    <Lib>
      <AdditionalOptions>/IGNORE:4264,4221 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>